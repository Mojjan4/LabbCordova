{"version":3,"sources":["Components/Theme/Theme.js","Components/FetchApi/Fetch.js","App.js","reportWebVitals.js","index.js"],"names":["Theme","exitApp","navigator","app","console","log","type","onClick","value","listStyle","border","borderRadius","fontSize","margin","wrapper","display","flexWrap","Fetch","useEffect","fetchBrews","useState","Brewers","setBrewes","a","fetch","then","response","json","result","style","map","brew","name","city","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAaeA,MAZf,WACI,IAAMC,EAAU,SAAVA,IACFC,UAAUC,IAAIF,UACdG,QAAQC,IAAIJ,EAAS,sBAEzB,OACI,8BACI,uBAAOK,KAAK,SAASC,QAAS,kBAAMN,KAAWO,MAAM,iB,8BCN3DC,EAAY,CACdC,OAAQ,YACRC,aAAc,MACdC,SAAU,SACVC,OAAQ,OAGNC,EAAU,CACZC,QAAS,OACTC,SAAU,QAsCCC,MAnCf,WACIC,qBAAU,WACNC,MACF,IAHW,MAKgBC,mBAAS,IALzB,mBAKNC,EALM,KAKGC,EALH,KAOPH,EAAU,uCAAG,sBAAAI,EAAA,sDACfC,MAAM,2CACLC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACHN,EAAUM,MAJC,2CAAH,qDAOhB,OACI,sBAAKC,MAAOf,EAAZ,UACKO,GACGA,EAAQS,KAAI,SAACC,GAAD,OACR,sBAAKF,MAAOpB,EAAZ,mBACWsB,EAAKC,KACZ,uBAFJ,SAGWD,EAAKE,OAHYF,EAAKG,OAO7C,4BC1BOC,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9eecb831.chunk.js","sourcesContent":["\nfunction Theme () {\n    const exitApp = () => {\n        navigator.app.exitApp();\n        console.log(exitApp, 'knappen trycktes!')\n    }\n    return (\n        <div>\n            <input type=\"button\" onClick={() => exitApp()} value=\"Exit app?\"/>\n        </div>\n    )\n}\n\nexport default Theme;","import {useEffect, useState} from 'react';\n\nconst listStyle = {\n    border: 'solid 1px',\n    borderRadius: '8px',\n    fontSize: '1.2rem',\n    margin: '5px'\n}\n\nconst wrapper = {\n    display: 'flex',\n    flexWrap: 'wrap',\n}\n\nfunction Fetch (){\n    useEffect(() => {\n        fetchBrews();\n    },[]);\n    \n    const [Brewers, setBrewes] = useState([]);\n\n    const fetchBrews = async () => {\n        fetch('https://api.openbrewerydb.org/breweries')\n        .then((response) => response.json())\n        .then((result) => {\n            setBrewes(result)\n        })\n    }\n    return (\n        <div style={wrapper}>\n            {Brewers && (\n                Brewers.map((brew) => (\n                    <div style={listStyle} key={brew.id}>\n                        Namn: {brew.name}\n                        <br/>\n                        Stad: {brew.city}\n                    </div>\n                ))\n        )}\n        <div>\n            \n        </div>\n\n        </div>\n        \n    )\n}\n\n\nexport default Fetch","import './App.css';\nimport Theme from './Components/Theme/Theme.js';\nimport Fetch from './Components/FetchApi/Fetch.js';\n\nfunction App() {\n  return (\n    <div>\n      <Fetch/>\n      <Theme/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}